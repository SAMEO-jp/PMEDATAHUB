// ==========================================
// プロジェクト管理システム - 設備担当者がタスクをアサインする設計
// ==========================================

// ==========================================
// ユーザー管理
// ==========================================

Table User {
  user_id text [pk, note: 'ユーザーID（6桁）']
  name_japanese text [note: '日本語名']
  TEL text [note: '電話番号']
  mail text [note: 'メールアドレス']
  name_english text [note: '英語名']
  name_yomi text [note: '読み仮名']
  company text [note: '会社名']
  bumon text [note: '部門']
  in_year text [note: '入社年']
  Kengen text [note: '権限']
  TEL_naisen text [note: '内線番号']
  sitsu text [note: '室']
  ka text [note: '課']
  syokui text [note: '職位']
}

// ==========================================
// プロジェクト管理
// ==========================================

Table PROJECT {
  ROWID Int [pk, increment]
  PROJECT_ID String [unique, not null, note: 'プロジェクトID']
  PROJECT_NAME String [note: 'プロジェクト名']
  PROJECT_DESCRIPTION String [note: 'プロジェクト説明']
  PROJECT_START_DATE String [note: 'プロジェクト開始日']
  PROJECT_START_ENDDATE String [note: 'プロジェクト終了日']
  PROJECT_STATUS String [note: 'プロジェクトステータス']
  PROJECT_CLIENT_NAME String [note: 'クライアント名']
  PROJECT_CLASSIFICATION String [note: 'プロジェクト分類']
  PROJECT_BUDGENT_GRADE String [note: '予算グレード']
  installationDate String [note: '設置日']
  drawingCompletionDate String [note: '図面完成日']
  PROJECT_EQUIPMENT_CATEGORY String [note: '設備カテゴリ']
  PROJECT_SYOHIN_CATEGORY String [note: '商品カテゴリ']
  CREATED_AT String [note: '作成日時']
  UPDATE_AT String [note: '更新日時']
  PROJECT_NOTE String [note: '備考']
  SPARE1 String [note: '予備1']
  SPARE2 String [note: '予備2']
  SPARE3 String [note: '予備3']
  IS_PROJECT String [note: 'プロジェクトフラグ']
}

Table PROJECT_HISTORY {
  history_id Int [pk, increment]
  project_id String [not null, note: 'プロジェクトID']
  action_type String [not null, note: 'アクションタイプ（作成/更新/削除など）']
  field_name String [note: '変更フィールド名']
  old_value String [note: '変更前の値']
  new_value String [note: '変更後の値']
  changed_by String [not null, note: '変更者ユーザーID']
  changed_at DateTime [default: `now()`, note: '変更日時']
}

Table PROJECT_MEMBERS {
  member_id Int [pk, increment]
  
  project_id String [not null, note: 'プロジェクトID']
  user_id String [not null, note: 'ユーザーID']
  role String [not null, note: '役割（PM/リーダー/メンバーなど）']
  joined_at DateTime [default: `now()`, note: '参加日時']
  left_at DateTime [note: '離脱日時（NULL=現在参加中）']
  assigned_by String [note: 'アサインした人のユーザーID']
  created_at DateTime [default: `now()`, note: '作成日時']
  updated_at DateTime [default: `now()`, note: '更新日時']

  indexes {
    (project_id, user_id) [unique, note: '同一プロジェクト内で同じユーザーは一度のみ']
  }
  
  note: 'プロジェクトメンバー管理テーブル'
}

// ==========================================
// 会議管理
// ==========================================

Table project_meetings {
  meeting_id Int [pk, increment, note: '会議ID']
  
  project_id String [not null, note: 'プロジェクトID']
  meeting_title String [not null, note: '会議タイトル']
  meeting_description String [note: '会議説明']
  meeting_type String [note: '会議タイプ（定例会/キックオフ/レビュー/その他）']
  meeting_location String [note: '会議場所']
  meeting_url String [note: 'オンライン会議URL']
  start_datetime DateTime [not null, note: '会議開始日時']
  end_datetime DateTime [not null, note: '会議終了日時']
  status String [default: 'scheduled', note: 'scheduled/completed/cancelled/postponed']
  organizer_user_id String [note: '主催者のユーザーID']
  agenda String [note: '議題']
  minutes String [note: '議事録']
  created_at DateTime [default: `now()`, note: '作成日時']
  updated_at DateTime [default: `now()`, note: '更新日時']
  
  indexes {
    (project_id, start_datetime) [note: 'プロジェクト別の会議検索用']
  }
  
  note: 'プロジェクト会議管理テーブル'
}

Table meeting_participants {
  participant_id Int [pk, increment, note: '参加者ID']
  
  meeting_id Int [not null, note: '会議ID']
  project_member_id Int [not null, note: 'プロジェクトメンバーID（PROJECT_MEMBERSのmember_id）']
  participation_status String [default: 'invited', note: 'invited/accepted/declined/tentative/attended']
  role String [note: '会議での役割（議長/書記/参加者など）']
  invited_at DateTime [default: `now()`, note: '招待日時']
  responded_at DateTime [note: '回答日時']
  attended Boolean [default: false, note: '出席したかどうか']
  notes String [note: '参加者メモ']
  created_at DateTime [default: `now()`, note: '作成日時']
  updated_at DateTime [default: `now()`, note: '更新日時']
  
  indexes {
    (meeting_id, project_member_id) [unique, note: '同一会議に同じメンバーは一度のみ']
  }
  
  note: '会議参加者管理テーブル（プロジェクトメンバーから選択）'
}

Table meeting_agenda_items {
  agenda_item_id Int [pk, increment, note: 'アジェンダ項目ID']
  
  meeting_id Int [not null, note: '会議ID']
  item_title String [not null, note: '項目タイトル']
  item_description String [note: '項目説明']
  presenter_member_id Int [note: '発表者のプロジェクトメンバーID']
  duration_minutes Int [note: '予定時間（分）']
  sort_order Int [default: 0, note: '表示順序']
  status String [default: 'pending', note: 'pending/discussed/deferred/completed']
  discussion_notes String [note: '討議メモ']
  created_at DateTime [default: `now()`, note: '作成日時']
  updated_at DateTime [default: `now()`, note: '更新日時']
  
  note: '会議アジェンダ項目管理テーブル'
}

Table meeting_action_items {
  action_item_id Int [pk, increment, note: 'アクションアイテムID']
  
  meeting_id Int [not null, note: '会議ID']
  action_title String [not null, note: 'アクションアイテムタイトル']
  action_description String [note: 'アクション説明']
  assigned_member_id Int [note: '担当者のプロジェクトメンバーID']
  due_date DateTime [note: '期限日時']
  priority String [default: 'medium', note: 'low/medium/high/urgent']
  status String [default: 'open', note: 'open/in_progress/completed/cancelled']
  completed_at DateTime [note: '完了日時']
  created_at DateTime [default: `now()`, note: '作成日時']
  updated_at DateTime [default: `now()`, note: '更新日時']
  
  note: '会議のアクションアイテム管理テーブル'
}

// ==========================================
// 設備管理
// ==========================================

Table setsubi_master {
  id Int [pk, increment, note: '設備ID']
  seiban String [unique, not null, note: '製番']
  shohin_category String [note: '商品カテゴリ']
  setsubi_name String [not null, note: '設備名']
  parent_seiban String [note: '親製番']
  location_code String [note: 'ロケーションコード']
  created_at DateTime [default: `now()`, note: '作成日時']
  updated_at DateTime [default: `now()`, note: '更新日時']
  
  note: '設備マスタテーブル'
}

Table project_setsubi {
  id Int [pk, increment]
  
  setsubi_id Int [not null, note: '設備ID']
  project_id String [not null, note: 'プロジェクトID']
  quantity Int [default: 1, note: '数量']
  usage_purpose String [note: '使用目的']
  installation_location String [note: '設置場所']
  status String [default: 'active', note: 'active/completed/cancelled']
  start_date DateTime [note: '使用開始日']
  end_date DateTime [note: '使用終了日']
  created_at DateTime [default: `now()`, note: '作成日時']
  updated_at DateTime [default: `now()`, note: '更新日時']

  indexes {
    (project_id, setsubi_id) [unique, note: '同一プロジェクト内で同じ設備は一度のみ']
  }
  
  note: 'プロジェクトで使用する設備の管理テーブル'
}

Table project_setsubi_assignment {
  id Int [pk, increment]
  project_setsubi_id Int [not null, note: 'プロジェクト設備ID']
  project_member_id Int [not null, note: 'プロジェクトメンバーID（PROJECT_MEMBERSのmember_id）']
  role String [note: '設備担当役割（責任者/作業者/確認者など）']
  assigned_at DateTime [default: `now()`, note: '担当開始日時']
  removed_at DateTime [note: '担当解除日時（NULL=現在有効）']
  status String [default: 'active', note: 'active/inactive']
  created_at DateTime [default: `now()`, note: '作成日時']
  updated_at DateTime [default: `now()`, note: '更新日時']

  indexes {
    (project_setsubi_id, project_member_id) [unique, note: '同一設備に同じメンバーは一度のみ']
  }
  
  note: 'プロジェクト設備への担当者アサイン管理（プロジェクトメンバーの中から割り当て）'
}

// ==========================================
// タスク管理
// ==========================================

Table tasks {
  id integer [pk, increment, note: 'PRIMARY KEY AUTOINCREMENT']
  parent_task_id integer [note: '親タスクID（NULL=ルートタスク）自己参照']
  project_setsubi_id integer [not null, note: 'プロジェクト設備ID（どの設備のタスクか）']
  epc_id text [note: 'EPC_ID 設計/製造/工事/プロマネ']
  task_type text [not null, default: 'タスク', note: 'タスクタイプ（将来の分類整理に備える）']
  name text [not null, note: 'タスク名']
  description text [note: 'タスク説明']
  start_date text [note: '開始予定日']
  end_date text [note: '終了予定日']
  status text [not null, default: '未着手', note: 'ステータス（未着手/進行中/完了など）']
  estimated_hours real [note: '予定作業時間']
  actual_hours real [note: '実績作業時間']
  sort_order integer [default: 0, note: '同階層内での表示順序']
  priority text [default: 'medium', note: '優先度（low/medium/high/urgent）']
  is_deleted integer [default: 0, note: '削除フラグ（0=有効/1=削除済み）']
  created_at text [not null, note: '作成日時']
  updated_at text [not null, note: '更新日時']
  
  note: 'タスク管理テーブル（設備に紐づく階層構造）'
}

Table task_assignments {
  id integer [pk, increment]
  task_id integer [not null, note: 'タスクID']
  project_setsubi_assignment_id integer [not null, note: '設備担当者ID（project_setsubi_assignmentのid）']
  assigned_at text [not null, note: 'アサイン日時']
  removed_at text [note: '削除日時（NULL=現在有効）']
  assigned_by integer [note: 'アサインした人の設備担当者ID（project_setsubi_assignment.id）']
  note_text text [note: 'アサイン時のメモ']
  created_at text [default: `datetime('now')`, note: '作成日時']
  updated_at text [default: `datetime('now')`, note: '更新日時']
  
  indexes {
    (task_id, project_setsubi_assignment_id) [unique, note: '同一タスクへの同一担当者の重複防止']
  }
  
  note: 'タスク担当者管理テーブル（設備担当者のみアサイン可能）'
}

// ==========================================
// リレーション定義
// ==========================================

// プロジェクト関連
Ref: PROJECT.PROJECT_ID < PROJECT_HISTORY.project_id [delete: cascade]
Ref: PROJECT.PROJECT_ID < PROJECT_MEMBERS.project_id [delete: cascade]
Ref: User.user_id < PROJECT_MEMBERS.user_id

// 会議関連
Ref: PROJECT.PROJECT_ID < project_meetings.project_id [delete: cascade]
Ref: User.user_id < project_meetings.organizer_user_id
Ref: project_meetings.meeting_id < meeting_participants.meeting_id [delete: cascade]
Ref: PROJECT_MEMBERS.member_id < meeting_participants.project_member_id
Ref: project_meetings.meeting_id < meeting_agenda_items.meeting_id [delete: cascade]
Ref: PROJECT_MEMBERS.member_id < meeting_agenda_items.presenter_member_id
Ref: project_meetings.meeting_id < meeting_action_items.meeting_id [delete: cascade]
Ref: PROJECT_MEMBERS.member_id < meeting_action_items.assigned_member_id

// 設備関連
Ref: PROJECT.PROJECT_ID < project_setsubi.project_id [delete: cascade]
Ref: setsubi_master.id < project_setsubi.setsubi_id
Ref: project_setsubi.id < project_setsubi_assignment.project_setsubi_id [delete: cascade]
Ref: PROJECT_MEMBERS.member_id < project_setsubi_assignment.project_member_id

// タスク関連（設備ベース）
Ref: tasks.parent_task_id > tasks.id [delete: set null]
Ref: tasks.project_setsubi_id > project_setsubi.id [delete: cascade]
Ref: task_assignments.task_id > tasks.id [delete: cascade]
Ref: task_assignments.project_setsubi_assignment_id > project_setsubi_assignment.id [delete: cascade]
