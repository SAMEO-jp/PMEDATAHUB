---
description: "SQLiteデータベースの操作方法、テーブル設計、クエリの書き方、型安全性の確保について定義します。"
globs: ["src/lib/db/**/*.ts"]
alwaysApply: false
---
# 🗄️ データベース操作（SQLite）

### 基本原則
- **データベースファイル**: `data/achievements.db`
- **型安全性**: すべてのクエリに型定義を付与
- **エラーハンドリング**: try-catch文で適切に処理

### データベース操作例
```typescript
// lib/db/db_connection.ts
import sqlite3 from 'sqlite3';
import { open } from 'sqlite';

export async function getDb() {
  return open({
    filename: 'data/achievements.db',
    driver: sqlite3.Database
  });
}

// lib/db/db_CRUD.ts
export async function getUserById(id: string): Promise<User | null> {
  try {
    const db = await getDb();
    const user = await db.get<User>('SELECT * FROM users WHERE id = ?', [id]);
    return user || null;
  } catch (error) {
    console.error('Failed to fetch user:', error);
    return null;
  }
}
```
