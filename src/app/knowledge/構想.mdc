---
description: 
globs: 
alwaysApply: false
---

# AIアプリ開発フロー（標準プロセス）
**目的・要件の明確化**
　アプリで「何を実現したいか」を言語化し、主なユースケースと成果物を整理する。必要に応じてユーザーストーリーや業務フローを簡易に可視化する。

**データ設計（概念設計）**
　アプリ内で取り扱うデータ構造を設計する。
　- 主なエンティティと属性（カラム）を洗い出す
　- データの流れ（入力 → 保存 → 表示）を簡易に整理する

**仮データ構築（プロトタイプ）**
　初期の開発を加速するため、代表的なJSONファイルを用意し、仮データで動作検証を行える状態にする。

**プロジェクト構成（ディレクトリ設計）**
　指定がない場合、src/app/ 以下にアプリ用のディレクトリを新規作成し、以下を基本構成とする：
　- components/: UIコンポーネント
　- features/: 機能単位のロジック
　- test/: テスト用ページまたはケース
　- lib/: ユーティリティ関数・AI呼び出し処理

**UIコンポーネント設計**
　画面構成を元に、再利用可能なコンポーネント単位で設計を行う。
　- 親子関係やPropsの定義を明確にする
　- 必要に応じて状態管理方法（useState / Zustand など）を選定する

**テストページの作成・テスト検討**
　コンポーネント単体のテストページ（/test/など）を用意し、動作確認を行う。
　- Storybook や Playwright、Jest などによるテスト戦略を検討
　- モックデータを使ってUI・動作の確認を行う

**動作設計（インタラクション/AI連携）**
　アプリに必要な動作（API呼び出し、アニメーション、ユーザー入力への応答など）を設計し、適切なトリガーと処理フローを定義する。